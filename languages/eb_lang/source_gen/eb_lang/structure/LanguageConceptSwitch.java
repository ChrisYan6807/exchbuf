package eb_lang.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int EBChar = 0;
  public static final int EBCharLiteral = 1;
  public static final int EBEmptyStatement = 2;
  public static final int EBEnum = 3;
  public static final int EBIIdentifierConcept = 4;
  public static final int EBInt8 = 5;
  public static final int EBIntLiteral = 6;
  public static final int EBIntPair = 7;
  public static final int EBIntType = 8;
  public static final int EBNumberLiteral = 9;
  public static final int EBPrimitiveType = 10;
  public static final int EBProtocol = 11;
  public static final int EBStatement = 12;
  public static final int EBTypeStatement = 13;
  public static final int EBTypeStatementContainer = 14;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x59242254602f42f3L, 0xab3adc203eb4cc03L);
    builder.put(0x726a4e86e23f3d15L, EBChar);
    builder.put(0x726a4e86e23f3d18L, EBCharLiteral);
    builder.put(0x726a4e86e23f3cfeL, EBEmptyStatement);
    builder.put(0x726a4e86e23f3d0dL, EBEnum);
    builder.put(0x726a4e86e23e7834L, EBIIdentifierConcept);
    builder.put(0x726a4e86e23f3d14L, EBInt8);
    builder.put(0x726a4e86e23f3d16L, EBIntLiteral);
    builder.put(0x726a4e86e23f3d1dL, EBIntPair);
    builder.put(0x726a4e86e23f3d13L, EBIntType);
    builder.put(0x726a4e86e23f3d17L, EBNumberLiteral);
    builder.put(0x726a4e86e23f3d10L, EBPrimitiveType);
    builder.put(0x726a4e86e23f3cf6L, EBProtocol);
    builder.put(0x726a4e86e23f3cf2L, EBStatement);
    builder.put(0x726a4e86e23f3cf3L, EBTypeStatement);
    builder.put(0x726a4e86e23e7837L, EBTypeStatementContainer);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
